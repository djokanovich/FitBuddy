<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="chkCarneCerdo.Text" xml:space="preserve">
    <value>Pork</value>
  </data>
  <data name="chkCarneVaca.Text" xml:space="preserve">
    <value>Cow meat</value>
  </data>
  <data name="chkFructosa.Text" xml:space="preserve">
    <value>Fructose</value>
  </data>
  <data name="chkHuevo.Text" xml:space="preserve">
    <value>Eggs</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkFrutosSecos.Size" type="System.Drawing.Size, System.Drawing">
    <value>48, 17</value>
  </data>
  <data name="btnAtras.Text" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="chkTomate.Text" xml:space="preserve">
    <value>Tomato</value>
  </data>
  <data name="chkLeche.Text" xml:space="preserve">
    <value>Milk</value>
  </data>
  <data name="chkHojasVerdes.Size" type="System.Drawing.Size, System.Drawing">
    <value>89, 17</value>
  </data>
  <data name="chkSoja.Size" type="System.Drawing.Size, System.Drawing">
    <value>44, 17</value>
  </data>
  <data name="btnEnviar.Text" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="chkCarneVaca.Size" type="System.Drawing.Size, System.Drawing">
    <value>73, 17</value>
  </data>
  <data name="chkQueso.Text" xml:space="preserve">
    <value>Cheese</value>
  </data>
  <data name="chkMariscos.Text" xml:space="preserve">
    <value>Seafood</value>
  </data>
  <data name="chkTomate.Size" type="System.Drawing.Size, System.Drawing">
    <value>62, 17</value>
  </data>
  <data name="chkTrigo.Size" type="System.Drawing.Size, System.Drawing">
    <value>155, 17</value>
  </data>
  <data name="chkCarneCerdo.Size" type="System.Drawing.Size, System.Drawing">
    <value>48, 17</value>
  </data>
  <data name="chkHojasVerdes.Text" xml:space="preserve">
    <value>Green leaves</value>
  </data>
  <data name="GroupBox1.Text" xml:space="preserve">
    <value>Indicate which of these foods you DO NOT EAT</value>
  </data>
  <data name="chkSoja.Text" xml:space="preserve">
    <value>Soy</value>
  </data>
  <data name="chkFrutasRojas.Text" xml:space="preserve">
    <value>Berries</value>
  </data>
  <data name="chkHuevo.Size" type="System.Drawing.Size, System.Drawing">
    <value>50, 17</value>
  </data>
  <data name="chkLeche.Size" type="System.Drawing.Size, System.Drawing">
    <value>45, 17</value>
  </data>
  <data name="chkTrigo.Text" xml:space="preserve">
    <value>Wheat, Starch, Barley, Rye</value>
  </data>
  <data name="chkPescado.Text" xml:space="preserve">
    <value>Fish</value>
  </data>
  <data name="chkMariscos.Size" type="System.Drawing.Size, System.Drawing">
    <value>66, 17</value>
  </data>
  <data name="chkCarnePollo.Size" type="System.Drawing.Size, System.Drawing">
    <value>65, 17</value>
  </data>
  <data name="chkFrutosSecos.Text" xml:space="preserve">
    <value>Nuts</value>
  </data>
  <data name="chkQueso.Size" type="System.Drawing.Size, System.Drawing">
    <value>62, 17</value>
  </data>
  <data name="lblWelcome.Size" type="System.Drawing.Size, System.Drawing">
    <value>0, 13</value>
  </data>
  <data name="chkPescado.Size" type="System.Drawing.Size, System.Drawing">
    <value>45, 17</value>
  </data>
  <data name="chkFructosa.Size" type="System.Drawing.Size, System.Drawing">
    <value>67, 17</value>
  </data>
  <data name="chkCarnePollo.Text" xml:space="preserve">
    <value>Chicken</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="chkFrutasRojas.Size" type="System.Drawing.Size, System.Drawing">
    <value>58, 17</value>
  </data>
  <data name="PictureBox1.Location" type="System.Drawing.Point, System.Drawing">
    <value>85, 164</value>
  </data>
</root>